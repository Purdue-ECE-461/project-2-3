
if [[ "$1" == "install" ]]; 
then
  python3 -m venv venv
  echo "Created Virtual Environment"
  
  source venv/bin/activate
  echo "Installing Dependencies"
  venv/bin/pip install --upgrade pip
  venv/bin/pip install --no-cache-dir -r requirements.txt
  venv/bin/pip install flask-restful
  curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-364.0.0-linux-x86_64.tar.gz
  tar -xf google-cloud-sdk-364.0.0-linux-x86_64.tar.gz
  ./google-cloud-sdk/install.sh -q
  ./google-cloud-sdk/bin/gcloud config set compute/zone us-east1-c
  
  ./google-cloud-sdk/bin/gcloud init
  ./google-cloud-sdk/bin/gcloud components update
  venv/bin/pip install --upgrade google-cloud-storage
  venv/bin/pip install --upgrade google-cloud-container
  venv/bin/pip install --upgrade pylint
  venv/bin/pip freeze > requirements.txt

  echo "Dependencies Installed"
  deactivate
elif [[ "$1" == "pylint" ]];
then
  source venv/bin/activate
  bash -c "find . \( -name venv -prune \) -o \( -name google-cloud-sdk -prune \) -o -name "*.py" -print | xargs pylint" >> pylintOut.txt
  deactivate
elif [[ "$1" == "deploy" ]];
then
  source venv/bin/activate
  bash -c "TZ=UTC date +'/%Y-%m-%d %H:%M:/,\$p' > date.txt"
  ./google-cloud-sdk/bin/gcloud app deploy ./package_moduleshelf/app.yaml --version=v1
  ./google-cloud-sdk/bin/gcloud endpoints services deploy ./package_moduleshelf/api.yaml
  ./google-cloud-sdk/bin/gcloud app logs read --limit=100 > deployLog.txt
  sed -f date.txt -n deployLog.txt > deployLogRecent.txt
  deactivate
elif [[ "$1" == "deployLog" ]];
then
  ./google-cloud-sdk/bin/gcloud app logs read --limit=100 > deployLog.txt
  sed -f date.txt -n deployLog.txt > deployLogRecent.txt
elif [[ "$1" == "clean" ]];
then
  rm date.txt
  rm deployLog*
  rm -rf venv
  rm -rf google-cloud-sdk
  rm -rf google-cloud-sdk-*.tar.*
fi
