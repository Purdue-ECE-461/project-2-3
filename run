
if [[ "$1" == "install" ]]; 
then
  python3 -m venv venv
  echo "Created Virtual Environment"
  
  source venv/bin/activate
  echo "Installing Dependencies"
  venv/bin/pip install --upgrade pip
  venv/bin/pip install --upgrade --force-reinstall --no-cache-dir -r requirements.txt
  nodeenv env
  env/bin/activate
  env/bin/npm install npm
  env/bin/npm install npm-audit-html
  env/bin/npm audit fix --force
  
  curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-365.0.1-linux-x86_64.tar.gz
  tar -xf google-cloud-sdk-365.0.1-linux-x86_64.tar.gz
  ./google-cloud-sdk/install.sh -q
  ./google-cloud-sdk/bin/gcloud config configurations activate default
  
  bash -c "venv/bin/pip freeze -l | sed 's/==.*//g'" > requirements.txt
  echo "Dependencies Installed"
  deactivate
elif [[ "$1" == "pylint" ]];
then
  source venv/bin/activate
  bash -c "find . \( -name venv -prune \) -o \( -name google-cloud-sdk -prune \) -o -name "*.py" -print | xargs pylint" >> pylintOut.txt
  deactivate
elif [[ "$1" == "deploy" ]];
then
  source venv/bin/activate
  bash -c "TZ=UTC date +'/%Y-%m-%d %H:%M:/,\$p' > date.txt"
  
  sed 's/"title": "ECE 461 - Fall 2021 - Project 2.paw",/"title": "ECE 461 - Fall 2021 - Project 2",/' apiImported.json | sed '8,9d' | sed 's/"version": "v0\.0\.0"/"version": "v1\.0\.0"/' | sed 's/"schemes": \[/"host": "ece461-p2-t3.appspot.com",/' | sed 's/"basePath": "\/",/"basePath": "\/v1",/' > api/api.json
  
  bash -c "./google-cloud-sdk/bin/gcloud endpoints services deploy api/api.json" 2> deployLogapiout.txt 1> deployLogapisuccess.txt
  awk '{gsub(/\\n/,"\n")}1' deployLogapiout.txt > deployLogapioutpretty.txt
  
  ./google-cloud-sdk/bin/gcloud app deploy ./package_moduleshelf/app.yaml ./api/apiAppEngine.yaml --version=v1 --promote --quiet --stop-previous-version
  
  ./google-cloud-sdk/bin/gcloud app logs read --limit=100 > deployLog.txt
  sed -f date.txt -n deployLog.txt > deployLogRecent.txt
  deactivate
elif [[ "$1" == "deployLog" ]];
then
  ./google-cloud-sdk/bin/gcloud app logs read --limit=100 > deployLog.txt
  sed -f date.txt -n deployLog.txt > deployLogRecent.txt
elif [[ "$1" == "clean" ]];
then
  rm date.txt
  rm deployLog*
  rm -rf venv
  rm -rf env
  rm -rf packageTemp
  rm -rf google-cloud-sdk
  rm -rf google-cloud-sdk-*.tar.*
  rm -rf ./api/api.json
fi
